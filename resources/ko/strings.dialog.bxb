template-macro-def (WONT_DELETE_ANY) {
  content {
    template ("좋아, 나는 기억을 삭제하지 않습니다.")
  }
}

template-macro-def (CONFIRM_DELETE_ALL) {
  content {
    template("모든 기억을 삭제 하시겠습니까?")
  }
}

template-macro-def (DELETING_ALL) {
  content {
    template ("모든 기억을 삭제하는 중 ...")
  }
}

template-macro-def (WONT_DELETE_IT) {
  content {
    template ("좋아요, 삭제하지 않겠습니다.")
  }
}

template-macro-def (CONFIRM_DELETE_JUST_REMEMBERED) {
  content {
    template ("이건 방금 저장한 기억입니다. 정말 삭제 하시겠습니까?")
  }
}

template-macro-def (DELETING_THE_MEMORY) {
  content {
    template ("기억 삭제 중 ...")
  }
}

template-macro-def (CONFIRM_DELETE_RECENT) {
  content {
    template ("가장 최근에 저장된 기억 삭제 하시겠습니까?")
  }
}

template-macro-def (DELETING_RECENT) {
  content {
    template ("가장 최근에 저장된 기억 삭제 중 ...")
  }
}

template-macro-def (DELETING_ONE) {
  content {
    template ("하나의 기억 삭제하는 중 ...")
  }
}

template-macro-def (CONFIRM_DELETE_MATCHED) {
  content {
    template ("일치하는 모든 항목을 삭제 하시겠습니까?")
  }
}

template-macro-def (CONFIRM_DELETE_SHOWN) {
  content {
    template ("표시된 내용을 삭제 하시겠습니까?")
  }
}

template-macro-def (DELETING_SHOWN) {
  content {
    template ("표시된 내용 삭제 중 ...")
  }
}

template-macro-def (GETTING_MEMORIES) {
  content {
    template ("기억 얻기 ...")
  }
}

template-macro-def (WHAT_TO_MEMORIZE) {
  content {
    template ("내가 당신을 위해 무엇을 외우 길 원하십니까?")
  }
}

template-macro-def (STORING_MEMORY) {
  content {
    template ("기억 저장 중 ...")
  }
}

template-macro-def (WHAT_TO_RECALL) {
  content {
    template ("내가 당신을 위해 무엇을 불러오하고 싶습니까?")
  }
}

template-macro-def (RECALLING_RECENT) {
  content {
    template ("가장 최근의 기억 불러오는 중 ...")
  }
}

template-macro-def (SEARCHING_MEMORIES) {
  content {
    template ("기억을 찾는 중 ...")
  }
}

template-macro-def (WILL_REMEMBER) {
  params {
    param (memories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    template ("당신이 한 말을 기억할 것입니다.") {
      speech ("나는 당신이 말한 것을 기억할 것입니다: #{value(memories[0].text)}.")
    }
  }
}

template-macro-def (PROBLEM_CANNOT_STORE) {
  content {
    template ("문제가 발생하여 말한 내용을 저장할 수 없습니다.")
  }
}

template-macro-def (HERES_RECENT_SPOKEN) {
  params {
    param (memories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    if (size(memories) > 0) {
      template ("다음은 가장 최근의 기억이다.") {
        speech ("#{value(memories[0].howLongAgo)} 당신은 기억을 저장. 당신은 나에게 말했다: #{value(memories[0].text)}.")
      }
    } else {
      template ("저장된 기억이 없습니다.")
    }
  }
}

template-macro-def (HERES_NO_MATCH) {
  params {
    param (memoryCount) {
      type (core.Integer)
      min (Required)
      max (One)
    }
    param (searchText) {
      type (SearchTextConcept)
      min (Optional)
      max (One)
    }
  }
  content {
    if (memoryCount == 0) {
      template ("저장된 기억이 없습니다. 나에게 무언가를 기억해달라고 부탁하십시오.")
    } else-if (exists(searchText)) {
      template ("#{value (searchText)} 에 대한 검색 결과가 없습니다. 다른 질문을 시도하십시오.")
    } else {
      template ("이에 대한 해답이되는 기억을 찾을 수 없습니다.")
    }
  }
}

template-macro-def (HERES_MATCH) {
  content {
    template ("가장 좋은 대답은 다음과 같습니다.")
  }
}

template-macro-def (HERES_MATCH_SPOKEN) {
  params {
    param (memories) {
      type (Memory)
      min (Required)
      max (Many)
    }
  }
  content {
    template ("가장 좋은 대답은 다음과 같습니다.") {
      speech ("#{value(memories[0].howLongAgo)} 당신은 나에게 말했다: #{value(memories[0].text)}.")
    }
  }
}

template-macro-def (HERES_SIMILAR) {
  content {
    template ("이것들은 비슷한 기억입니다.")
  }
}

template-macro-def (FIRST_MEMORY) {
  content {
    template ("이것은 첫 번째 기억입니다.")
  }
}

template-macro-def (ALL_MEMORIES) {
  content {
    template ("그것들은 모두 기억입니다.")
  }
}

template-macro-def (NEXT_MEMORY) {
  content {
    template ("일치하는 다음 기억을 듣고 싶습니다?")
  }
}

template-macro-def (YOU_TOLD_ME) {
  params {
    param (memory) {
      type (Memory)
      min (Required)
      max (One)
    }
  }
  content {
    template ("#{value(memory.howLongAgo)} 당신은 나에게 말했다: #{value(memory.text)}.")
  }
}

template-macro-def (ALL_SIMILAR_MEMORIES) {
  params {
    param (memories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    if (size(memories) > 0) {
      template ("이것들은 비슷한 기억입니다.") {
        speech ("#{value(memories[0].howLongAgo)} 당신은 나에게 말했다: #{value(memories[0].text)}. 이것들은 비슷한 기억입니다.")
      }
    }
  }
}

template-macro-def (FIRST_N_MEMORIES) {
  params {
    param (pageSize) {
      type (core.Integer)
      min (Required)
    }
  }
  content {
    template ("The first #{value(pageSize)} memories are:")
  }
}

template-macro-def (LAST_N_MEMORIES) {
  params {
    param (pageSize) {
      type (core.Integer)
      min (Required)
      max (One)
    }
  }
  content {
    template ("The last #{value(pageSize)} memories are:")
  }
}

template-macro-def (NEXT_N_MEMORIES) {
  params {
    param (pageSize) {
      type (core.Integer)
      min (Required)
      max (One)
    }
  }
  content {
    template ("The next #{value(pageSize)} memories are:")
  }
}

template-macro-def (LAST_MEMORY) {
  content {
    template ("The last memory is:")
  }
}

template-macro-def (THIS_MEMORY) {
  content {
    template ("This memory is:")
  }
}

template-macro-def (THESE_MEMORIES) {
  content {
    template ("These memories are:")
  }
}

template-macro-def (WHAT_TO_DO) {
  content {
    template ("What would you like to do?")
  }
}

template-macro-def (WOULD_LIKE_TO_HEAR_MORE) {
  content {
    template ("Would you like to hear more memories?")
  }
}

template-macro-def (WHAT_IS_UPDATED_MEMORY) {
  content {
    template ("What is the updated memory?")
  }
}

template-macro-def (UPDATED_MEMORY_SPOKEN) {
  params {
    param (memories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    if (size(memories) > 0) {
      template ("I updated that memory.") {
        speech ("I updated that memory, and will remember that you said: #{value(memories[0].text)}.")
      }
    } else {
      template ("There was a problem and I could not update that memory.")
    }
  }
}

template-macro-def (VERSION_IS) {
  params {
    param (serverVersion) {
      type (core.Text)
      min (Required)
      max (One)
    }
  }
  content {
    template ("My Brain lambda version is #{value(serverVersion)}")
  }
}

template-macro-def (VERSION_PROBLEM) {
  content {
    template ("I had a problem trying to get the server version.")
  }
}

template-macro-def (HELP_TEXT) {
  content {
    template("Tell me to remember something, and I’ll remember it. Ask me a question that includes a few words from that memory, and I’ll find it for you.")
  }
}

template-macro-def (LIST_MEMORIES) {
  params {
    param (success) {
      type (core.Boolean)
      min (Required)
      max(One)
    }
    param (memories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    if (success) {
      if (size(memories) == 0) {
        template ("There are no memories.")
      } else-if (size(memories) == 1) {
        template ("You have 1 memory.")
      } else {
        template ("You have #{size(memories)} memories.")
      }
    } else {
      template("There was a problem and I could not retrieve the memories.")
    }
  }
}

template-macro-def (DELETED_ALL_MEMORIES) {
  content {
    template ("I deleted all memories.")
  }
}

template-macro-def (COULD_NOT_DELETE_ALL_MEMORIES) {
  content {
    template ("There was a problem and I could not delete all memories.")
  }
}

template-macro-def (DELETED_ONE_MEMORY) {
  content {
    template ("I deleted that memory.")
  }
}

template-macro-def (COULD_NOT_DELETE_ONE_MEMORY) {
  content {
    template ("There was a problem and I could not delete that memory.")
  }
}

template-macro-def (DELETED_SOME_MEMORIES) {
  params {
    param (deletedMemories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    if (size(deletedMemories) == 1) {
      template ("I deleted 1 memory.")
    } else {
      template ("I deleted #{size(deletedMemories)} memories.")
    }
  }
}

template-macro-def (COULD_NOT_DELETE_SOME_MEMORIES) {
  params {
    param (deletedMemories) {
      type (Memory)
      min (Optional)
      max (Many)
    }
  }
  content {
    if (size(deletedMemories) == 0) {
      template ("There was a problem and I could not delete any memories.")
    } else-if (size(deletedMemories) == 1) {
      template ("There was a problem and I could only delete 1 memory.")
    } else {
      template ("There was a problem and I could only delete #{size(deletedMemories)} memories.")
    }
  }
}

template-macro-def (SAVE) {
  content {
    template ("저장")
  }
}

template-macro-def (CV_LIST_ALL_MEMORIES) {
  content {
    template ("모든 추억을 나열")
  }
}

template-macro-def (CV_REMEMBER_HELP) {
  content {
    template ("Remember that I heard the help")
  }
}

template-macro-def (CV_HEARD_HELP) {
  content {
    template ("Have I heard the help?")
  }
}

template-macro-def (CV_MOST_RECENT_MEMORY) {
  content {
    template ("가장 최근의 기억")
  }
}

template-macro-def (CV_DELETE_ALL_MEMORIES) {
  content {
    template ("모든 추억을 삭제")
  }
}

template-macro-def (CV_DELETE_THIS_MEMORY) {
  content {
    template ("이 메모리를 삭제")
  }
}

template-macro-def (CV_DELETE_THESE_MEMORIES) {
  content {
    template ("이 추억을 삭제")
  }
}

template-macro-def (CV_EDIT_THIS_MEMORY) {
  content {
    template ("이 기억을 편집하다")
  }
}
